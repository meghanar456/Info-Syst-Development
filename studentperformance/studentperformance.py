# Form implementation generated from reading ui file 'studentperformance.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import pymysql as mdb

class Ui_studentPerformance(object):
    def setupUi(self, studentPerformance):
        studentPerformance.setObjectName("studentPerformance")
        studentPerformance.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        studentPerformance.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=studentPerformance)
        self.centralwidget.setObjectName("centralwidget")
        self.lblStudentId = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblStudentId.setGeometry(QtCore.QRect(200, 90, 101, 16))
        self.lblStudentId.setObjectName("lblStudentId")
        self.txtStudentId = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtStudentId.setGeometry(QtCore.QRect(330, 90, 113, 20))
        self.txtStudentId.setObjectName("txtStudentId")
        self.lblName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblName.setGeometry(QtCore.QRect(200, 120, 121, 16))
        self.lblName.setObjectName("lblName")
        self.txtName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtName.setGeometry(QtCore.QRect(330, 120, 113, 20))
        self.txtName.setObjectName("txtName")
        self.lblAge = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAge.setGeometry(QtCore.QRect(200, 150, 121, 16))
        self.lblAge.setObjectName("lblAge")
        self.txtAge = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAge.setGeometry(QtCore.QRect(330, 150, 113, 20))
        self.txtAge.setObjectName("txtAge")
        self.lblScore = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblScore.setGeometry(QtCore.QRect(200, 180, 121, 16))
        self.lblScore.setObjectName("lblScore")
        self.txtScore = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtScore.setGeometry(QtCore.QRect(330, 180, 113, 20))
        self.txtScore.setObjectName("txtScore")
        self.btnInsert = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnInsert.setGeometry(QtCore.QRect(220, 220, 75, 23))
        self.btnInsert.setObjectName("btnInsert")
        self.btnDisplay = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnDisplay.setGeometry(QtCore.QRect(330, 220, 91, 23))
        self.btnDisplay.setObjectName("btnDisplay")
        self.lstData = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstData.setGeometry(QtCore.QRect(190, 280, 256, 192))
        self.lstData.setObjectName("lstData")
        studentPerformance.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=studentPerformance)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        studentPerformance.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=studentPerformance)
        self.statusbar.setObjectName("statusbar")
        studentPerformance.setStatusBar(self.statusbar)

        self.retranslateUi(studentPerformance)
        QtCore.QMetaObject.connectSlotsByName(studentPerformance)
        
        self.btnInsert.clicked.connect(self.insert_data)
        self.btnDisplay.clicked.connect(self.display_data)
        
    def display_data(self):
        try:
            conn = self.connecttodb()
            cursorobj = conn.cursor()
            cursorobj.execute("select * from studentinfo")
            results = cursorobj.fetchall()
            
            self.lstData.clear()
            self.lstData.addItem("ID    Name    Age    Score    Performance")
            for row in results:
                sid, sname, sage, sscore = row
                if(sscore>90):
                    performance = "Very Good"
                else:
                    performance = "Good"
                
                self.lstData.addItem(f"{sid} {sname} {sage} {sscore} {performance}")
        
        except Exception as e:
            print(e)
        finally:
            if(conn):
                conn.close()
            
    
    def insert_data(self):
        try:
            sid = int(self.txtStudentId.text())
            sname= self.txtName.text()
            sage = int(self.txtAge.text())
            sscore = int(self.txtScore.text())
            
            #Establish a database connection and store the connection objct in variable conn
            conn = self.connecttodb()
            #create a cursor object
            cursorobj = conn.cursor()
            cursorobj.execute("insert into studentinfo values (%s, %s, %s, %s)", [sid, sname, sage, sscore])
            #Commits the insert transaction to the database table
            conn.commit()
        except Exception as e:
            print(e)
        finally:
            #If connection object exists
            if(conn):
                conn.close()
        
    def connecttodb(self):
        connectionobj = mdb.connect(host="localhost", user = "studentdbuser", password="studentdbuser", database = "studentinfodb", port =3306)
        print("Connected to the DB")
        return connectionobj

    def retranslateUi(self, studentPerformance):
        _translate = QtCore.QCoreApplication.translate
        studentPerformance.setWindowTitle(_translate("studentPerformance", "Student Performance"))
        self.lblStudentId.setText(_translate("studentPerformance", "Enter Student ID"))
        self.lblName.setText(_translate("studentPerformance", "Enter Student Name"))
        self.lblAge.setText(_translate("studentPerformance", "Enter Student Age"))
        self.lblScore.setText(_translate("studentPerformance", "Enter Student Score"))
        self.btnInsert.setText(_translate("studentPerformance", "Insert Data"))
        self.btnDisplay.setText(_translate("studentPerformance", "Display Data"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    studentPerformance = QtWidgets.QMainWindow()
    ui = Ui_studentPerformance()
    ui.setupUi(studentPerformance)
    studentPerformance.show()
    sys.exit(app.exec())
