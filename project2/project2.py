# Form implementation generated from reading ui file 'project2.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_collegeFeeCalculator(object):
    def setupUi(self, collegeFeeCalculator):
        collegeFeeCalculator.setObjectName("collegeFeeCalculator")
        collegeFeeCalculator.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        collegeFeeCalculator.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=collegeFeeCalculator)
        self.centralwidget.setObjectName("centralwidget")
        self.lblFirstName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblFirstName.setGeometry(QtCore.QRect(190, 80, 61, 16))
        self.lblFirstName.setObjectName("lblFirstName")
        self.lblLastName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblLastName.setGeometry(QtCore.QRect(190, 110, 61, 16))
        self.lblLastName.setObjectName("lblLastName")
        self.lblTitle = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTitle.setGeometry(QtCore.QRect(190, 30, 201, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lblTitle.setFont(font)
        self.lblTitle.setObjectName("lblTitle")
        self.lblAge = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAge.setGeometry(QtCore.QRect(190, 140, 61, 16))
        self.lblAge.setObjectName("lblAge")
        self.txtFirstName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtFirstName.setGeometry(QtCore.QRect(280, 80, 113, 20))
        self.txtFirstName.setObjectName("txtFirstName")
        self.txtLastName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtLastName.setGeometry(QtCore.QRect(280, 110, 113, 20))
        self.txtLastName.setObjectName("txtLastName")
        self.txtAge = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAge.setGeometry(QtCore.QRect(280, 140, 113, 20))
        self.txtAge.setObjectName("txtAge")
        self.cmbMajor = QtWidgets.QComboBox(parent=self.centralwidget)
        self.cmbMajor.setGeometry(QtCore.QRect(280, 170, 161, 22))
        self.cmbMajor.setObjectName("cmbMajor")
        self.cmbMajor.addItem("")
        self.cmbMajor.addItem("")
        self.cmbMajor.addItem("")
        self.cmbMajor.addItem("")
        self.cmbMajor.addItem("")
        self.lblMajor = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblMajor.setGeometry(QtCore.QRect(190, 170, 81, 16))
        self.lblMajor.setObjectName("lblMajor")
        self.chkResidency = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.chkResidency.setGeometry(QtCore.QRect(310, 200, 71, 17))
        self.chkResidency.setObjectName("chkResidency")
        self.btnCalculate = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCalculate.setGeometry(QtCore.QRect(240, 240, 91, 23))
        self.btnCalculate.setObjectName("btnCalculate")
        self.btnClear = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnClear.setGeometry(QtCore.QRect(170, 330, 91, 23))
        self.btnClear.setObjectName("btnClear")
        self.btnExit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(300, 330, 91, 23))
        self.btnExit.setObjectName("btnExit")
        self.lblTotalFee = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTotalFee.setGeometry(QtCore.QRect(190, 280, 61, 16))
        self.lblTotalFee.setObjectName("lblTotalFee")
        self.txtTotalFee = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtTotalFee.setGeometry(QtCore.QRect(280, 280, 113, 20))
        self.txtTotalFee.setReadOnly(True)
        self.txtTotalFee.setObjectName("txtTotalFee")
        self.lblResidency = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblResidency.setGeometry(QtCore.QRect(190, 200, 51, 16))
        self.lblResidency.setObjectName("lblResidency")
        self.lblPrice = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblPrice.setGeometry(QtCore.QRect(480, 170, 131, 16))
        self.lblPrice.setText("")
        self.lblPrice.setObjectName("lblPrice")
        collegeFeeCalculator.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=collegeFeeCalculator)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        collegeFeeCalculator.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=collegeFeeCalculator)
        self.statusbar.setObjectName("statusbar")
        collegeFeeCalculator.setStatusBar(self.statusbar)

        self.retranslateUi(collegeFeeCalculator)
        QtCore.QMetaObject.connectSlotsByName(collegeFeeCalculator)
        
        #Storing what which program/major's additional fee would be
        self.program_fees = {"Computer Science": 2000, "Business Administration":1500, "Arts and Humanities":1000, "Sciences": 1800}
        #When something is selected on cmbMajor, to execute the display_price function
        self.cmbMajor.currentIndexChanged.connect(self.display_price)
        #When btnCalculate is clicked, to execute the calculate function
        self.btnCalculate.clicked.connect(self.calculate)
        #When btnClear is clicked, to execute the Clear function
        self.btnClear.clicked.connect(self.clear)
        #When btnExit is clicked, to execute the appexit function
        self.btnExit.clicked.connect(self.appexit)
    
    #Defining what the display_price do
    def display_price(self):
        #Store the current selected major in the variable/object major_selection
        major_selection=self.cmbMajor.currentText()
        #If a major is selectd, use the respective program_fees keys
        if(major_selection in self.program_fees.keys()):
            #Get the price for the selected major from the program_fees dictionary
            price=self.program_fees.get(major_selection)
            #Display the price to the user using the label
            self.lblPrice.setText(f"${price}")
        #If else, display nothing. 
        else:
            self.lblPrice.setText("")
            
    #Defining what the calculate do    
    def calculate(self):
        #if the chkResidency is checked, the tution would be = 10000 since it would be In-State
        if(self.chkResidency.isChecked()):
            tuition= 10000
        #if the chkResidency is not checked, the tution would be = 15000 since it would be Out of State
        else:
            tuition=15000
         #Store the current selected major in the variable/object major_selection    
        major_selection= self.cmbMajor.currentText()
        #If a major is selectd, use the respective program_fees keys
        if(major_selection in self.program_fees.keys()):
            #Get the program_fee amount for the selected major and store it as price
            price = self.program_fees.get(major_selection)
            #Store total_cost as tutition added with the price
            total_cost = tuition+price
            #Display the total cost in the txtTotalFee with $ sign
            self.txtTotalFee.setText(str(f"${total_cost:}"))
            
        #If else, display a message box for it to select a major
        else:
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("College Fee Calculator")
            msg.setText("Please select a major from the dropdown")
            msg.exec()
    
    #Defining what the clear do     
    def clear(self):
       #Clear the First Name text box
       self.txtFirstName.clear()
       #Clear the Last Name text box
       self.txtLastName.clear()
       #Clear the Age text box
       self.txtAge.clear()
       #Clear the selected major combo box
       self.cmbMajor.clear()
       #Clear the checkbox
       self.chkResidency.setChecked(False)
       #Clear the Total Fee text box
       self.txtTotalFee.clear()
       #Clear the displayed price
       self.lblPrice.clear()
        
    def appexit(self):
        #Exit the application
        QtWidgets.QApplication.quit()
        
    def retranslateUi(self, collegeFeeCalculator):
        _translate = QtCore.QCoreApplication.translate
        collegeFeeCalculator.setWindowTitle(_translate("collegeFeeCalculator", "College Fee Calculator"))
        self.lblFirstName.setText(_translate("collegeFeeCalculator", "First Name"))
        self.lblLastName.setText(_translate("collegeFeeCalculator", "Last Name"))
        self.lblTitle.setText(_translate("collegeFeeCalculator", "NCSU Enrollment Fee Calculator"))
        self.lblAge.setText(_translate("collegeFeeCalculator", "Age"))
        self.cmbMajor.setItemText(0, _translate("collegeFeeCalculator", "Select a Major"))
        self.cmbMajor.setItemText(1, _translate("collegeFeeCalculator", "Computer Science"))
        self.cmbMajor.setItemText(2, _translate("collegeFeeCalculator", "Business Administration"))
        self.cmbMajor.setItemText(3, _translate("collegeFeeCalculator", "Arts and Humanities"))
        self.cmbMajor.setItemText(4, _translate("collegeFeeCalculator", "Sciences"))
        self.lblMajor.setText(_translate("collegeFeeCalculator", "Intented Major"))
        self.chkResidency.setText(_translate("collegeFeeCalculator", "Yes"))
        self.btnCalculate.setText(_translate("collegeFeeCalculator", "Calculate Fee"))
        self.btnClear.setText(_translate("collegeFeeCalculator", "Clear"))
        self.btnExit.setText(_translate("collegeFeeCalculator", "Exit"))
        self.lblTotalFee.setText(_translate("collegeFeeCalculator", "Total Fee"))
        self.lblResidency.setText(_translate("collegeFeeCalculator", "In-State"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    collegeFeeCalculator = QtWidgets.QMainWindow()
    ui = Ui_collegeFeeCalculator()
    ui.setupUi(collegeFeeCalculator)
    collegeFeeCalculator.show()
    sys.exit(app.exec())
